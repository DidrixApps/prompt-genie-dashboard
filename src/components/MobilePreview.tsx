import { useState } from 'react';
import { Smartphone, Tablet, Monitor, RotateCcw } from 'lucide-react';

export function MobilePreview() {
  const [activeDevice, setActiveDevice] = useState<'mobile' | 'tablet' | 'desktop'>('mobile');
  const [isPortrait, setIsPortrait] = useState(true);

  const devices = [
    { id: 'mobile', icon: Smartphone, label: 'Mobile' },
    { id: 'tablet', icon: Tablet, label: 'Tablet' },
    { id: 'desktop', icon: Monitor, label: 'Desktop' },
  ] as const;

  const getDeviceDimensions = () => {
    const dims = {
      mobile: { width: 375, height: 667 },
      tablet: { width: 768, height: 1024 },
      desktop: { width: 1200, height: 800 },
    };
    
    const { width, height } = dims[activeDevice];
    return isPortrait ? { width, height } : { width: height, height: width };
  };

  const { width, height } = getDeviceDimensions();
  const scale = Math.min(400 / width, 600 / height);

  return (
    <div className="glass-card rounded-2xl p-6">
      <div className="flex items-center justify-between mb-6">
        <h3 className="text-lg font-semibold">Live Preview</h3>
        
        <div className="flex items-center space-x-4">
          {/* Device Selector */}
          <div className="flex bg-muted rounded-lg p-1">
            {devices.map((device) => (
              <button
                key={device.id}
                onClick={() => setActiveDevice(device.id)}
                className={`flex items-center space-x-2 px-3 py-2 rounded-md text-sm font-medium transition-all ${
                  activeDevice === device.id
                    ? 'bg-background text-foreground shadow-sm'
                    : 'text-muted-foreground hover:text-foreground'
                }`}
              >
                <device.icon className="w-4 h-4" />
                <span className="hidden sm:inline">{device.label}</span>
              </button>
            ))}
          </div>

          {/* Orientation Toggle */}
          {activeDevice !== 'desktop' && (
            <button
              onClick={() => setIsPortrait(!isPortrait)}
              className="p-2 rounded-lg hover:bg-muted transition-colors"
              title="Toggle orientation"
            >
              <RotateCcw className="w-4 h-4" />
            </button>
          )}
        </div>
      </div>

      {/* Device Frame */}
      <div className="flex justify-center">
        <div
          className="relative bg-gradient-to-b from-gray-800 to-gray-900 rounded-[2rem] p-2 shadow-2xl"
          style={{
            width: width * scale + 32,
            height: height * scale + 32,
          }}
        >
          {/* Screen */}
          <div
            className="bg-white rounded-[1.5rem] overflow-hidden relative"
            style={{
              width: width * scale,
              height: height * scale,
            }}
          >
            {/* Status Bar (Mobile only) */}
            {activeDevice === 'mobile' && (
              <div className="h-6 bg-black flex items-center justify-between px-4 text-white text-xs">
                <span>9:41</span>
                <div className="flex items-center space-x-1">
                  <div className="w-4 h-2 border border-white rounded-sm">
                    <div className="w-3 h-1 bg-white rounded-sm m-0.5"></div>
                  </div>
                </div>
              </div>
            )}

            {/* App Content */}
            <div className="flex-1 bg-gradient-to-br from-blue-50 to-indigo-100 p-4">
              <div className="h-full flex flex-col">
                {/* App Header */}
                <div className="bg-white rounded-xl p-4 mb-4 shadow-sm">
                  <div className="flex items-center space-x-3">
                    <div className="w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-600 rounded-xl flex items-center justify-center">
                      <span className="text-white font-bold text-sm">AI</span>
                    </div>
                    <div>
                      <h2 className="font-semibold text-gray-900">Your App</h2>
                      <p className="text-xs text-gray-500">Generated by AI</p>
                    </div>
                  </div>
                </div>

                {/* Sample Content */}
                <div className="flex-1 space-y-3">
                  <div className="bg-white rounded-lg p-3 shadow-sm">
                    <div className="h-2 bg-gray-200 rounded mb-2"></div>
                    <div className="h-2 bg-gray-200 rounded w-2/3"></div>
                  </div>
                  <div className="bg-white rounded-lg p-3 shadow-sm">
                    <div className="h-2 bg-gray-200 rounded mb-2"></div>
                    <div className="h-2 bg-gray-200 rounded w-3/4"></div>
                  </div>
                  <div className="bg-white rounded-lg p-3 shadow-sm">
                    <div className="h-2 bg-gray-200 rounded mb-2"></div>
                    <div className="h-2 bg-gray-200 rounded w-1/2"></div>
                  </div>
                </div>

                {/* Sample Button */}
                <div className="bg-gradient-to-r from-blue-500 to-purple-600 rounded-xl p-3 text-center">
                  <span className="text-white font-semibold text-sm">Action Button</span>
                </div>
              </div>
            </div>
          </div>

          {/* Device Details */}
          {activeDevice === 'mobile' && (
            <div className="absolute bottom-1 left-1/2 transform -translate-x-1/2 w-20 h-1 bg-gray-700 rounded-full"></div>
          )}
        </div>
      </div>

      {/* Preview Info */}
      <div className="mt-4 text-center text-sm text-muted-foreground">
        Preview: {width} Ã— {height}px ({activeDevice}, {isPortrait ? 'portrait' : 'landscape'})
      </div>
    </div>
  );
}